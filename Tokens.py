import requests
import os

try:
    os.mkdir("Tokens")
except:
    print("ok")

os.chdir("Tokens")

headers = {
    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    "accept-language": "en-US,en;q=0.9",
    "sec-ch-ua": "\"Chromium\";v=\"93\", \" Not;A Brand\";v=\"99\"",
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": "\"Linux\"",
    "sec-fetch-dest": "iframe",
    "sec-fetch-mode": "navigate",
    "sec-fetch-site": "same-site",
    "upgrade-insecure-requests": "1"
}


site = input("Site Name:   ")
MAX_TOKENS = int(input("Max Tokens to generate:   "))
message = input("Message:     ")
siteName = site.replace('https://', '')
siteName = siteName.replace('http://', '')
siteName = siteName.replace('www.', '')
siteName = siteName.split("/")[0]


try:
    os.mkdir(siteName)
    print(siteName)
except:
    os.mkdir(siteName)
    print(siteName)

print(os.getcwd())
os.chdir(siteName)

tokens = open("tokens", "a+")

if site.startswith("https://") == False:
    if site.startswith("http://") == False:
        site = "https://"+site

def getWebsiteToken(site):
    main = requests.get(site, headers=headers)
    main = main.text
    try:
        webToken = main.split("websiteToken: \"")[1].split("\"")[0]
    except:
        webToken = main.split("websiteToken: \'")[1].split("\'")[0]
    

    #baseUrl
    mains = main.lower().replace(" ",'')
    main = mains.splitlines()

    for i in range(0,len(main)):
        

        base = main[i].find("/packs/js/sdk.js")
        if base != -1:
            print("found")
            possibleMatches= []
            
            lines = []


            end = False
            for z in range(-3, 7):
                if main[i+z].find("})") == -1:
                    if end != True:
                        lines.append(main[i+z])
                else:
                    end = True

            print(lines)

            websiteToken = "empty"
            baseurl = "empty"


            found = False
            for z in range(0,len(lines)):
                if lines[z].find("varba") != -1:
                    try:
                        baseurl = lines[z].split("\"")[1].split("\"")[0]
                        found = True

                    except:
                        baseurl = lines[z].split("\'")[1].split("\'")[0]
                        found = True



                
                if found == False:
                    if lines[z].find("base") != -1:
                        if lines[z].find("/packs/js/sdk.js") == -1:
                            print(lines[z])
                            try:
                                baseurl = lines[z].split("\"")[1].split("\"")[0]

                            except:
                                baseurl = lines[z].split("\'")[1].split("\'")[0]

            if found == True:
                print(baseurl)
            print(baseurl)
            #try:
             #   webToken = main[i+1].split("\"")[1].split("\"")[0]
            #except:
             #   webToken = main[i+1].split("\'")[1].split("\'")[0]

            print("found")
            

            sitepage = baseurl+"/widget?website_token="+webToken
            print(sitepage)
    print("ok")
    data=[sitepage,webToken, baseurl]
    return data


link = getWebsiteToken(site)[0]


def getToken(link):
  print(link)
  response = requests.get(link, headers=headers)
  authtoken = "window.authToken"
  response = response.text
  response = response.split(authtoken)[1].split("\'")[1]
  return response


i = 0
while i<MAX_TOKENS:
    token = getToken(link)
    print(token)
    tokens = open("tokens", "a+")
    tokens.write(token+"\n")
    tokens.close()
    i+=1

config = open("config", '+a')
config.write("{")
config.write("\"site\" : \""+site+"\",")
config.write("\"max\" : "+str(MAX_TOKENS)+",")
config.write("\"message\" : \""+message+"\",")
config.write("\"baseurl\" : \""+getWebsiteToken(site)[2]+"\",")
config.write("\"site_token\" : \""+getWebsiteToken(site)[1]+"\"")
config.write("}")
config.close()


